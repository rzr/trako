trako.h:0: info: trako-0.0.0program is beeing profiled
src/main.cpp:53: scope: { main @0 [=0s 15us]

# Profiling classes instances
src/main.cpp:58: trace: <MyClass> +1=1 = 8B (<1<1 )
src/main.cpp:63: trace: <MyClass> +1=2 = 16B (<2<2 )
src/main.cpp:66: trace: <MyClass> +1=3 = 24B (<3<3 )
src/main.cpp:69: trace: <MyClass> -1=2 = 16B (<3<3 )

# Profiling methods
src/main.cpp:77: trace: <MyClass> -1=1 = 8B (<3<3 )
src/main.cpp:24: scope: { method @1 [=0s 102us]
src/main.cpp:30: scope: { methodSub @2 [=0s 103us]
src/main.cpp:30: scope: } methodSub @2 [+0s 1us]
src/main.cpp:24: scope: } method @1 [+0s 3us]
src/main.cpp:24: scope: { method @1 [=0s 106us]
src/main.cpp:30: scope: { methodSub @2 [=0s 107us]
src/main.cpp:30: scope: } methodSub @2 [+0s 1us]
src/main.cpp:24: scope: } method @1 [+0s 3us]
src/main.cpp:42: scope: { methodLong @1 [=0s 112us]
src/main.cpp:42: scope: } methodLong @1 [+0s 160us]
src/main.cpp:89: type: <void*> 0=0 = 0B (<0<0 )

# Profiling program
src/main.cpp:96: trace: <MyClass> 0=1 = 8B (<3<4 )
src/main.cpp:96: trace: <MyOtherClass> +1=1 = 8B (<2<2 )

# Profiling scopes
src/main.cpp:100: scope: { row @1 [=0s 291us]
src/main.cpp:102: scope: { col @2 [=0s 292us]
src/main.cpp:102: scope: } col @2 [+0s 1us]
src/main.cpp:102: scope: { col @2 [=0s 293us]
src/main.cpp:102: scope: } col @2 [+0s 1us]
src/main.cpp:100: scope: } row @1 [+0s 4us]
src/main.cpp:100: scope: { row @1 [=0s 296us]
src/main.cpp:102: scope: { col @2 [=0s 297us]
src/main.cpp:102: scope: } col @2 [+0s 1us]
src/main.cpp:102: scope: { col @2 [=0s 299us]
src/main.cpp:102: scope: } col @2 [+0s 1us]
src/main.cpp:100: scope: } row @1 [+0s 5us]

# Multithreading
src/main.cpp:109: scope: { mutex: this line wont be split @1 [=0s 305us]
src/main.cpp:109: scope: } mutex: this line wont be split @1 [+0s 1us]

# Quitting
src/main.cpp:53: scope: } main @0 [+0s 295us]
trako.h:0: info: {
src/trako/Context.cpp:35: quit: <MyClass> -1=0 = 0B (<3<4 )
src/trako/Context.cpp:35: quit: <MyOtherClass> -1=0 = 0B (<2<2 )
trako.h:0: info: }
